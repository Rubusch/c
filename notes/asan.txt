address sanitizer



USAGE

in Makefile add "-fsanitize=address" and (opt) "-fno-omit-frame-pointer"
    ...
    CFLAGS += -g -Wall -fsanitize=address -fno-omit-frame-pointer
    ...



check out libsan is installed

$ dpkg -l | grep libasan
    ii  libasan5:armhf                       8.3.0-6+rpi1                            armhf        AddressSanitizer -- a fast memory error detector

$ dpkg -L libasan5
    /.
    /usr
    /usr/lib
    /usr/lib/arm-linux-gnueabihf
    /usr/lib/arm-linux-gnueabihf/libasan.so.5.0.0
    /usr/share
    /usr/share/doc
    /usr/lib/arm-linux-gnueabihf/libasan.so.5
    /usr/share/doc/libasan5



build project, and export LD_PRELOAD

$ make clean && make basictest.exe
$ export LD_PRELOAD=libasan.so.5



execute binary

$ ./basictest.exe
     CUnit - A unit testing framework for C - Version 2.1-3
     http://cunit.sourceforge.net/

    Suite: red black tree
      Test: tree root ...passed
      Test: tree get data ...passed
      Test: tree print ...passed
    
    Run Summary:    Type  Total    Ran Passed Failed Inactive
                  suites      1      1    n/a      0        0
                   tests      3      3      3      0        0
                 asserts      8      8      8      0      n/a
    
    Elapsed time =    0.010 seconds


    =================================================================
    ==7053==ERROR: AddressSanitizer: heap-use-after-free on address 0xb3e00aa0 at pc 0x000140e0 bp 0xbec89bcc sp 0xbec89bc4
    READ of size 8 at 0xb3e00aa0 thread T0
        #0 0x140df in red_black_insert /usr/src/github__c/60_algorithm/075_red-black-tree/red-black-tree.c:494
        #1 0x110a7 in test_tree_get_data unittest/test.c:83
    
    0xb3e00aa0 is located 16 bytes inside of 32-byte region [0xb3e00a90,0xb3e00ab0)
    freed by thread T0 here:
        #0 0xb6a7a887 in __interceptor_free (/lib/arm-linux-gnueabihf/libasan.so.5+0xe1887)
        #1 0x11a37 in test_tree_print unittest/test.c:165
        #2 0xb6976e67  (/lib/arm-linux-gnueabihf/libcunit.so.1+0x3e67)
    
    previously allocated by thread T0 here:
        #0 0xb6a7abbb in __interceptor_malloc (/lib/arm-linux-gnueabihf/libasan.so.5+0xe1bbb)
        #1 0x141d3 in red_black_insert /usr/src/github__c/60_algorithm/075_red-black-tree/red-black-tree.c:500
        #2 0x1183f in test_tree_print unittest/test.c:132
        #3 0xb6976e67  (/lib/arm-linux-gnueabihf/libcunit.so.1+0x3e67)
    
    SUMMARY: AddressSanitizer: heap-use-after-free /usr/src/github__c/60_algorithm/075_red-black-tree/red-black-tree.c:494 in red_black_insert
    Shadow bytes around the buggy address:
      0x367c0100: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
      0x367c0110: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
      0x367c0120: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
      0x367c0130: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
      0x367c0140: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
    =>0x367c0150: fa fa fd fd[fd]fd fa fa fd fd fd fd fa fa fd fd
      0x367c0160: fd fd fa fa 00 00 00 fa fa fa 00 00 00 fa fa fa
      0x367c0170: 00 00 00 fa fa fa fa fa fa fa fa fa fa fa fa fa
      0x367c0180: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
      0x367c0190: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
      0x367c01a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
    Shadow byte legend (one shadow byte represents 8 application bytes):
      Addressable:           00
      Partially addressable: 01 02 03 04 05 06 07
      Heap left redzone:       fa
      Freed heap region:       fd
      Stack left redzone:      f1
      Stack mid redzone:       f2
      Stack right redzone:     f3
      Stack after return:      f5
      Stack use after scope:   f8
      Global redzone:          f9
      Global init order:       f6
      Poisoned by user:        f7
      Container overflow:      fc
      Array cookie:            ac
      Intra object redzone:    bb
      ASan internal:           fe
      Left alloca redzone:     ca
      Right alloca redzone:    cb
    ==7053==ABORTING


restore shell as before (w/o asan)
$ unset LD_PRELOAD
